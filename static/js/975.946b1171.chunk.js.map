{"version":3,"file":"static/js/975.946b1171.chunk.js","mappings":"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","sources":["api/movies.js","webpack://react-homework-template/./src/components/MoviesSearch/MoviesSearchForm/movies-search-form.module.css?50cb","components/MoviesSearch/MoviesSearchForm/MoviesSearchForm.jsx","../node_modules/nanoid/index.browser.js","components/MoviesSearch/MoviesSearchList/movies-search-list.module.css","components/MoviesSearch/MoviesSearchList/MoviesSearchList.jsx","webpack://react-homework-template/./src/components/MoviesSearch/movies-search.module.css?498e","components/MoviesSearch/MoviesSearch.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n})\n\n\nexport const getTrendingMovies = () => {\n    const API_KEY = 'eaa473c2aabcdb92684db8ef78b61bb0';\n    return instance.get(\"/trending/movie/day\", {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    })\n}\n\nexport const searchMovies = (q, page = 1) => {\n    const API_KEY = 'eaa473c2aabcdb92684db8ef78b61bb0';\n    return instance.get(\"/search/movie\", {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            include_adult: false,\n            query: q,\n            page,\n        }\n    })\n}\n\nexport const getMoviesById = id => {\n    const API_KEY = 'eaa473c2aabcdb92684db8ef78b61bb0';\n    return instance.get(`movie/${id}`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    })\n}\n\nexport const getMoviesByIdCast = id => {\n    const API_KEY = 'eaa473c2aabcdb92684db8ef78b61bb0';\n    return instance.get(`movie/${id}/credits`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    })\n}\n\nexport const getMoviesByIdReviews = id => {\n    const API_KEY = 'eaa473c2aabcdb92684db8ef78b61bb0';\n    return instance.get(`movie/${id}/reviews`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    })\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"movies-search-form_searchForm__ypifB\",\"fieldGroup\":\"movies-search-form_fieldGroup__mB1g5\"};","import { useState, useEffect, useRef, useMemo } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport styles from \"./movies-search-form.module.css\";\n\nconst MoviesSearchForm = ({ onSubmit }) => {\n    const [state, setState] = useState({\n        search: \"\",\n    });\n\n    const inputRef = useRef(null);\n\n    useEffect(() => {\n        inputRef.current.focus();\n    }, [])\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        setState({\n            ...state,\n            [name]: value,\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({ ...state });\n        reset();\n    }\n\n    const reset = () => {\n        setState({\n            search: \"\"\n        });\n    }\n\n    const searchId = useMemo(() => nanoid(), []);\n\n    return (\n        <form onSubmit={handleSubmit} className={styles.searchForm}>\n            <div className={styles.fieldGroup}>\n                <label htmlFor={searchId}></label>\n                <input id={searchId} ref={inputRef} value={state.search} onChange={handleChange} required type=\"text\" name=\"search\" />\n            </div>\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n}\n\n\nexport default MoviesSearchForm;","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {};","import { Link, useLocation } from \"react-router-dom\";\n\nimport styles from \"./movies-search-list.module.css\";\n\nconst MoviesSearchList = ({items}) => {\n    const location = useLocation();\n\n    const elements = items.map(({ id, original_title}) => (<li key={id} className={styles.item}>\n                                                                <Link to={`/movies/${id}`} state={{from: location}}>{original_title}</Link>\n                                                            </li>));\n\n    return (\n        (<ul className={styles.list}>\n            {elements}\n        </ul>)\n    )\n}\n\nexport default MoviesSearchList;","// extracted by mini-css-extract-plugin\nexport default {\"errorColor\":\"movies-search_errorColor__iZrYW\",\"loadMoreWrapper\":\"movies-search_loadMoreWrapper__EOBDu\"};","import { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\n\nimport MoviesSearchForm from \"./MoviesSearchForm/MoviesSearchForm\";\nimport MoviesSearchList from \"./MoviesSearchList/MoviesSearchList\";\n\nimport { searchMovies } from \"../../api/movies\";\n\nimport styles from \"./movies-search.module.css\";\n\nconst SearchMovies = () => {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    \n\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const search = searchParams.get(\"search\");\n\n    useEffect(()=> {\n        const fetchSearchMovies = async ()=> {\n            try {\n                setLoading(true);\n                const { data } = await searchMovies(search);\n                setMovies(data.results?.length ? data.results : []);\n            }\n            catch (error) {\n               setError(error.message);\n            }\n            finally {\n                setLoading(false);\n            }\n        }\n        if(search) {\n            fetchSearchMovies();\n        }\n    }, [search])\n\n    const handleSearch = ({ search }) => {\n        setSearchParams({search});\n        setMovies([]);\n    }\n\n\n    const isMovies = Boolean(movies.length);\n\n\n    return (\n        <>\n            <MoviesSearchForm onSubmit={handleSearch} />\n            {error && <p className={styles.errorColor}>{error}</p>}\n            {loading && <p>...Loading</p>}\n            {isMovies && <MoviesSearchList items={movies} />}\n        </>\n    )\n}\n\nexport default SearchMovies;","import MoviesSearch from \"../../components/MoviesSearch/MoviesSearch\";\n\n// import styles from \"./movies-search-page.module.css\";\n\nconst Movies = ()=> {\n    return (\n        <div>\n            <MoviesSearch />\n        </div>\n    )\n}\n\nexport default Movies;"],"names":["instance","axios","baseURL","getTrendingMovies","get","params","api_key","language","searchMovies","q","page","arguments","length","undefined","API_KEY","include_adult","query","getMoviesById","id","concat","getMoviesByIdCast","getMoviesByIdReviews","_ref","onSubmit","_useState","useState","search","_useState2","_slicedToArray","state","setState","inputRef","useRef","useEffect","current","focus","reset","searchId","useMemo","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","_jsxs","e","preventDefault","_objectSpread","className","styles","children","_jsx","htmlFor","ref","value","onChange","_ref2","target","name","_defineProperty","required","type","items","location","useLocation","elements","map","original_title","Link","to","from","movies","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","fetchSearchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_data$results","_yield$searchMovies","data","_context","prev","next","sent","results","t0","message","finish","stop","apply","isMovies","Boolean","_Fragment","MoviesSearchForm","MoviesSearchList","MoviesSearch"],"sourceRoot":""}